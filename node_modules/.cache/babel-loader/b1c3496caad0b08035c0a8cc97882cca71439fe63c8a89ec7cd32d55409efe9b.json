{"ast":null,"code":"var _jsxFileName = \"/Users/kushki/Downloads/JsonGenerator/src/components/JsonResult.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JsonResult = ({\n  jsonData\n}) => {\n  _s();\n  const [copied, setCopied] = useState(false);\n\n  // Función para generar el string JSON sin las barras invertidas en las comillas internas\n  const getUnescapedJsonString = () => {\n    // Generar el JSON string normal\n    let jsonString = JSON.stringify(jsonData, null, 2);\n\n    // Reemplazar \\\" con \" solo dentro de los valores de cadena\n    // Esto es un regex más complejo para evitar romper la estructura del JSON\n    // Solo des-escapa las comillas que YA HAN SIDO ESCAPADAS por JSON.stringify\n    // y que están dentro de los valores de cadenas.\n    // Esto es una HACK, no es la forma correcta de manejar JSON, pero es para tu caso específico.\n    jsonString = jsonString.replace(/\\\\\"/g, '\"');\n\n    // Si quieres un enfoque MUY AGRESIVO (no recomendado para JSON generales,\n    // solo si tu Postman realmente necesita esto y nada más):\n    // jsonString = jsonString.replace(/\\\\/g, ''); // Quita TODAS las barras invertidas. PELIGROSO.\n    // Esto también quitaría \\n, \\t etc.\n\n    return jsonString;\n  };\n  const handleCopy = () => {\n    // Usar la función que des-escapa para copiar\n    navigator.clipboard.writeText(getUnescapedJsonString());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-md space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-medium\",\n        children: \"Resultado JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopy,\n          className: \"bg-black text-white py-1 px-3 rounded-md text-sm hover:bg-gray-800 transition-colors\",\n          children: \"Copiar JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), copied && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"absolute -top-8 right-0 bg-gray-800 text-white text-xs px-2 py-1 rounded\",\n          children: \"\\xA1Copiado!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"bg-gray-100 p-4 rounded-md overflow-x-auto text-sm\",\n      children: getUnescapedJsonString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(JsonResult, \"NE86rL3vg4NVcTTWDavsT0hUBJs=\");\n_c = JsonResult;\nexport default JsonResult;\nvar _c;\n$RefreshReg$(_c, \"JsonResult\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JsonResult","jsonData","_s","copied","setCopied","getUnescapedJsonString","jsonString","JSON","stringify","replace","handleCopy","navigator","clipboard","writeText","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kushki/Downloads/JsonGenerator/src/components/JsonResult.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst JsonResult = ({ jsonData }) => {\n  const [copied, setCopied] = useState(false);\n\n  // Función para generar el string JSON sin las barras invertidas en las comillas internas\n  const getUnescapedJsonString = () => {\n    // Generar el JSON string normal\n    let jsonString = JSON.stringify(jsonData, null, 2);\n\n    // Reemplazar \\\" con \" solo dentro de los valores de cadena\n    // Esto es un regex más complejo para evitar romper la estructura del JSON\n    // Solo des-escapa las comillas que YA HAN SIDO ESCAPADAS por JSON.stringify\n    // y que están dentro de los valores de cadenas.\n    // Esto es una HACK, no es la forma correcta de manejar JSON, pero es para tu caso específico.\n    jsonString = jsonString.replace(/\\\\\"/g, '\"'); \n    \n    // Si quieres un enfoque MUY AGRESIVO (no recomendado para JSON generales,\n    // solo si tu Postman realmente necesita esto y nada más):\n    // jsonString = jsonString.replace(/\\\\/g, ''); // Quita TODAS las barras invertidas. PELIGROSO.\n                                                 // Esto también quitaría \\n, \\t etc.\n\n    return jsonString;\n  };\n\n\n  const handleCopy = () => {\n    // Usar la función que des-escapa para copiar\n    navigator.clipboard.writeText(getUnescapedJsonString());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-lg font-medium\">Resultado JSON</h2>\n        <div className=\"relative\">\n          <button\n            onClick={handleCopy}\n            className=\"bg-black text-white py-1 px-3 rounded-md text-sm hover:bg-gray-800 transition-colors\"\n          >\n            Copiar JSON\n          </button>\n          {copied && (\n            <span className=\"absolute -top-8 right-0 bg-gray-800 text-white text-xs px-2 py-1 rounded\">\n              ¡Copiado!\n            </span>\n          )}\n        </div>\n      </div>\n      <pre className=\"bg-gray-100 p-4 rounded-md overflow-x-auto text-sm\">\n        {/* Usar la función que des-escapa para mostrar */}\n        {getUnescapedJsonString()} \n      </pre>\n    </div>\n  );\n};\n\nexport default JsonResult;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACP,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;;IAElD;IACA;IACA;IACA;IACA;IACAK,UAAU,GAAGA,UAAU,CAACG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;;IAE5C;IACA;IACA;IAC6C;;IAE7C,OAAOH,UAAU;EACnB,CAAC;EAGD,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACR,sBAAsB,CAAC,CAAC,CAAC;IACvDD,SAAS,CAAC,IAAI,CAAC;IACfU,UAAU,CAAC,MAAMV,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,6CAA6C;IAAAC,QAAA,gBAC1DjB,OAAA;MAAKgB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDjB,OAAA;QAAIgB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDrB,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBjB,OAAA;UACEsB,OAAO,EAAEX,UAAW;UACpBK,SAAS,EAAC,sFAAsF;UAAAC,QAAA,EACjG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRjB,MAAM,iBACLJ,OAAA;UAAMgB,SAAS,EAAC,0EAA0E;UAAAC,QAAA,EAAC;QAE3F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrB,OAAA;MAAKgB,SAAS,EAAC,oDAAoD;MAAAC,QAAA,EAEhEX,sBAAsB,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvDIF,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyDhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}