{"ast":null,"code":"import _objectSpread from\"/Users/kushki/Downloads/JsonGenerator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export const parseTestCases=(rawData,folderId,projectId)=>{const PROJECT_CONFIG={'10924':{// DMOE\nstatus:{'done':'520037','in progress':'520036','to do':'520035'},priority:{'blocker':'589140','high':'589141','medium':'589142','low':'589143'},labels:{'ia':'254567','ia_amazonq':'219436','ia_chatgpt':'217193','ia_gemini':'254566','prod':'254565','qa':'217192','uat':'217194'}},'10809':{// CAR\nstatus:{'done':'302403','in progress':'302402','to do':'302401'},priority:{'blocker':'179215','high':'179216','medium':'179217','low':'179218'},labels:{'ia':'254567','ia_amazonq':'219436','ia_chatgpt':'217193','ia_gemini':'254566','prod':'254565','qa':'217192','uat':'217194'}},'10786':{// BP\nstatus:{'done':'321723','in progress':'321722','to do':'321721'},priority:{'blocker':'188008','high':'188009','medium':'188010','low':'188011'},labels:{'ia':'254567','ia_amazonq':'219436','ia_chatgpt':'217193','ia_gemini':'254566','prod':'254565','qa':'217192','uat':'217194'}},'10803':{// TYA\nstatus:{'done':'302421','in progress':'302420','to do':'302419'},priority:{'blocker':'179223','high':'179224','medium':'179225','low':'179226'},labels:{'ia':'254567','ia_amazonq':'219436','ia_chatgpt':'217193','ia_gemini':'254566','prod':'254565','qa':'217192','uat':'217194'}},'10807':{// PLA\nstatus:{'done':'302412','in progress':'302411','to do':'302410'},priority:{'blocker':'179219','high':'179220','medium':'179221','low':'179222'},labels:{'ia':'254567','ia_amazonq':'219436','ia_chatgpt':'217193','ia_gemini':'254566','prod':'254565','qa':'217192','uat':'217194'}}};const config=PROJECT_CONFIG[projectId]||PROJECT_CONFIG['10924'];const lines=rawData.split('\\n').filter(line=>line.trim()!=='');if(lines.length<2)return[];// Procesar encabezados insensibles a mayúsculas y crear un mapeo\nconst headerLine=lines[0];const originalHeaders=headerLine.split('\\t').map(header=>header.trim());const lowerCaseHeaders=originalHeaders.map(header=>header.toLowerCase());const testCases=[];for(let i=1;i<lines.length;i++){var _testCaseObj$priority,_config$priority,_testCaseObj$status,_config$status,_testCaseObj$labels;const values=lines[i].split('\\t');const testCaseObj={};lowerCaseHeaders.forEach((lowerHeader,index)=>{let value=values[index]?values[index].trim():'';// *** MODIFICACIÓN CLAVE AQUÍ: ELIMINAR COMILLAS DOBLES ***\n// Elimina todas las comillas dobles del string.\n// Si quieres solo quitar las que están al principio y al final, usarías:\n// value = value.replace(/^\"|\"$/g, '');\n// Pero si quieres que no aparezcan NUNCA dentro del texto, usa:\nvalue=value.replace(/\"/g,'');testCaseObj[lowerHeader]=value;});// Mapeo de valores (insensible a mayúsculas)\nconst priorityKey=(_testCaseObj$priority=testCaseObj.priority)===null||_testCaseObj$priority===void 0?void 0:_testCaseObj$priority.toLowerCase();const priorityCode=((_config$priority=config.priority)===null||_config$priority===void 0?void 0:_config$priority[priorityKey])||null;const statusKey=(_testCaseObj$status=testCaseObj.status)===null||_testCaseObj$status===void 0?void 0:_testCaseObj$status.toLowerCase();const statusCode=((_config$status=config.status)===null||_config$status===void 0?void 0:_config$status[statusKey])||null;const labels=[];// Acceder a Labels usando el encabezado en minúscula\nconst caseLabels=((_testCaseObj$labels=testCaseObj.labels)===null||_testCaseObj$labels===void 0?void 0:_testCaseObj$labels.split(','))||[];caseLabels.forEach(label=>{var _config$labels;const trimmedLabel=label.trim().toLowerCase();if((_config$labels=config.labels)!==null&&_config$labels!==void 0&&_config$labels[trimmedLabel]&&!labels.includes(config.labels[trimmedLabel])){labels.push(config.labels[trimmedLabel]);}});// Construir objeto de labels dinámicamente\nconst dynamicLabels={};labels.forEach((labelCode,index)=>{dynamicLabels[\"labels\".concat(index+1)]=labelCode;});testCases.push(_objectSpread(_objectSpread({// Acceder a los datos usando los encabezados en minúscula\nsummary:testCaseObj.sumary||testCaseObj.caso||'',precondition:testCaseObj.precondition||'',projectId:projectId,folderId:folderId,priority:priorityCode,status:statusCode},dynamicLabels),{},{// Incluir labels dinámicamente\nstepDetails:testCaseObj['step summary']||'',testData:testCaseObj['test data']||'',expectedResult:testCaseObj['expected result']||'',id:1,isChecked:false,isExpanded:true}));}return testCases;};","map":{"version":3,"names":["parseTestCases","rawData","folderId","projectId","PROJECT_CONFIG","status","priority","labels","config","lines","split","filter","line","trim","length","headerLine","originalHeaders","map","header","lowerCaseHeaders","toLowerCase","testCases","i","_testCaseObj$priority","_config$priority","_testCaseObj$status","_config$status","_testCaseObj$labels","values","testCaseObj","forEach","lowerHeader","index","value","replace","priorityKey","priorityCode","statusKey","statusCode","caseLabels","label","_config$labels","trimmedLabel","includes","push","dynamicLabels","labelCode","concat","_objectSpread","summary","sumary","caso","precondition","stepDetails","testData","expectedResult","id","isChecked","isExpanded"],"sources":["/Users/kushki/Downloads/JsonGenerator/src/utils/parseTestCases.js"],"sourcesContent":["export const parseTestCases = (rawData, folderId, projectId) => {\n  const PROJECT_CONFIG = {\n    '10924': { // DMOE\n      status: {\n        'done': '520037',\n        'in progress': '520036',\n        'to do': '520035'\n      },\n      priority: {\n        'blocker': '589140',\n        'high': '589141',\n        'medium': '589142',\n        'low': '589143'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10809': { // CAR\n      status: {\n        'done': '302403',\n        'in progress': '302402',\n        'to do': '302401'\n      },\n      priority: {\n        'blocker': '179215',\n        'high': '179216',\n        'medium': '179217',\n        'low': '179218'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10786': { // BP\n      status: {\n        'done': '321723',\n        'in progress': '321722',\n        'to do': '321721'\n      },\n      priority: {\n        'blocker': '188008',\n        'high': '188009',\n        'medium': '188010',\n        'low': '188011'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10803': { // TYA\n      status: {\n        'done': '302421',\n        'in progress': '302420',\n        'to do': '302419'\n      },\n      priority: {\n        'blocker': '179223',\n        'high': '179224',\n        'medium': '179225',\n        'low': '179226'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10807': { // PLA\n      status: {\n        'done': '302412',\n        'in progress': '302411',\n        'to do': '302410'\n      },\n      priority: {\n        'blocker': '179219',\n        'high': '179220',\n        'medium': '179221',\n        'low': '179222'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    }\n  };\n\n  const config = PROJECT_CONFIG[projectId] || PROJECT_CONFIG['10924'];\n\n  const lines = rawData.split('\\n').filter(line => line.trim() !== '');\n  if (lines.length < 2) return [];\n\n  // Procesar encabezados insensibles a mayúsculas y crear un mapeo\n  const headerLine = lines[0];\n  const originalHeaders = headerLine.split('\\t').map(header => header.trim());\n  const lowerCaseHeaders = originalHeaders.map(header => header.toLowerCase());\n\n  const testCases = [];\n\n  for (let i = 1; i < lines.length; i++) {\n    const values = lines[i].split('\\t');\n    const testCaseObj = {};\n\n    lowerCaseHeaders.forEach((lowerHeader, index) => {\n      let value = values[index] ? values[index].trim() : '';\n      \n      // *** MODIFICACIÓN CLAVE AQUÍ: ELIMINAR COMILLAS DOBLES ***\n      // Elimina todas las comillas dobles del string.\n      // Si quieres solo quitar las que están al principio y al final, usarías:\n      // value = value.replace(/^\"|\"$/g, '');\n      // Pero si quieres que no aparezcan NUNCA dentro del texto, usa:\n      value = value.replace(/\"/g, ''); \n      \n      testCaseObj[lowerHeader] = value;\n    });\n\n    // Mapeo de valores (insensible a mayúsculas)\n    const priorityKey = testCaseObj.priority?.toLowerCase();\n    const priorityCode = config.priority?.[priorityKey] || null;\n\n    const statusKey = testCaseObj.status?.toLowerCase();\n    const statusCode = config.status?.[statusKey] || null;\n\n    const labels = [];\n    // Acceder a Labels usando el encabezado en minúscula\n    const caseLabels = testCaseObj.labels?.split(',') || [];\n\n    caseLabels.forEach(label => {\n        const trimmedLabel = label.trim().toLowerCase();\n        if (config.labels?.[trimmedLabel] && !labels.includes(config.labels[trimmedLabel])) {\n            labels.push(config.labels[trimmedLabel]);\n        }\n    });\n\n    // Construir objeto de labels dinámicamente\n    const dynamicLabels = {};\n    labels.forEach((labelCode, index) => {\n        dynamicLabels[`labels${index + 1}`] = labelCode;\n    });\n\n    testCases.push({\n        // Acceder a los datos usando los encabezados en minúscula\n        summary: testCaseObj.sumary || testCaseObj.caso || '',\n        precondition: testCaseObj.precondition || '',\n        projectId: projectId,\n        folderId: folderId,\n        priority: priorityCode,\n        status: statusCode,\n        ...dynamicLabels, // Incluir labels dinámicamente\n        stepDetails: testCaseObj['step summary'] || '',\n        testData: testCaseObj['test data'] || '',\n        expectedResult: testCaseObj['expected result'] || '',\n        id:1,\n        isChecked: false,\n        isExpanded: true\n    });\n  }\n\n  return testCases;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}