{"ast":null,"code":"// src/utils/parseTestCases.js\n\nexport const parseTestCases = (rawData, folderId, projectId) => {\n  const PROJECT_CONFIG = {\n    '10924': {\n      // DMOE\n      status: {\n        'done': '520037',\n        'in progress': '520036',\n        'to do': '520035'\n      },\n      priority: {\n        'blocker': '589140',\n        'high': '589141',\n        'medium': '589142',\n        'low': '589143'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10809': {\n      // CAR\n      status: {\n        'done': '302403',\n        'in progress': '302402',\n        'to do': '302401'\n      },\n      priority: {\n        'blocker': '179215',\n        'high': '179216',\n        'medium': '179217',\n        'low': '179218'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10786': {\n      // BP\n      status: {\n        'done': '321723',\n        'in progress': '321722',\n        'to do': '321721'\n      },\n      priority: {\n        'blocker': '188008',\n        'high': '188009',\n        'medium': '188010',\n        'low': '188011'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10803': {\n      // TYA\n      status: {\n        'done': '302421',\n        'in progress': '302420',\n        'to do': '302419'\n      },\n      priority: {\n        'blocker': '179223',\n        'high': '179224',\n        'medium': '179225',\n        'low': '179226'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10807': {\n      // OPS\n      status: {\n        'done': '302412',\n        'in progress': '302411',\n        'to do': '302410'\n      },\n      priority: {\n        'blocker': '179219',\n        'high': '179220',\n        'medium': '179221',\n        'low': '179222'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    }\n  };\n  const config = PROJECT_CONFIG[projectId] || PROJECT_CONFIG['10924'];\n  const lines = rawData.split('\\n').filter(line => line.trim() !== '');\n  if (lines.length < 2) return [];\n\n  // Procesar encabezados insensibles a mayúsculas y crear un mapeo\n  const headerLine = lines[0];\n  const originalHeaders = headerLine.split('\\t').map(header => header.trim());\n  const lowerCaseHeaders = originalHeaders.map(header => header.toLowerCase());\n  const testCases = [];\n  for (let i = 1; i < lines.length; i++) {\n    var _testCaseObj$priority, _config$priority, _testCaseObj$status, _config$status, _testCaseObj$labels;\n    const values = lines[i].split('\\t');\n    const testCaseObj = {};\n    lowerCaseHeaders.forEach((lowerHeader, index) => {\n      let value = values[index] ? values[index].trim() : '';\n\n      // *** MODIFICACIÓN CLAVE AQUÍ: ELIMINAR COMILLAS DOBLES ***\n      // Elimina todas las comillas dobles del string.\n      // Si quieres solo quitar las que están al principio y al final, usarías:\n      // value = value.replace(/^\"|\"$/g, '');\n      // Pero si quieres que no aparezcan NUNCA dentro del texto, usa:\n      value = value.replace(/\"/g, '');\n      testCaseObj[lowerHeader] = value;\n    });\n\n    // Mapeo de valores (insensible a mayúsculas)\n    const priorityKey = (_testCaseObj$priority = testCaseObj.priority) === null || _testCaseObj$priority === void 0 ? void 0 : _testCaseObj$priority.toLowerCase();\n    const priorityCode = ((_config$priority = config.priority) === null || _config$priority === void 0 ? void 0 : _config$priority[priorityKey]) || null;\n    const statusKey = (_testCaseObj$status = testCaseObj.status) === null || _testCaseObj$status === void 0 ? void 0 : _testCaseObj$status.toLowerCase();\n    const statusCode = ((_config$status = config.status) === null || _config$status === void 0 ? void 0 : _config$status[statusKey]) || null;\n    const labels = [];\n    // Acceder a Labels usando el encabezado en minúscula\n    const caseLabels = ((_testCaseObj$labels = testCaseObj.labels) === null || _testCaseObj$labels === void 0 ? void 0 : _testCaseObj$labels.split(',')) || [];\n    caseLabels.forEach(label => {\n      var _config$labels;\n      const trimmedLabel = label.trim().toLowerCase();\n      if ((_config$labels = config.labels) !== null && _config$labels !== void 0 && _config$labels[trimmedLabel] && !labels.includes(config.labels[trimmedLabel])) {\n        labels.push(config.labels[trimmedLabel]);\n      }\n    });\n\n    // Construir objeto de labels dinámicamente\n    const dynamicLabels = {};\n    labels.forEach((labelCode, index) => {\n      dynamicLabels[`labels${index + 1}`] = labelCode;\n    });\n    testCases.push({\n      // Acceder a los datos usando los encabezados en minúscula\n      summary: testCaseObj.sumary || testCaseObj.caso || '',\n      precondition: testCaseObj.precondition || '',\n      projectId: projectId,\n      folderId: folderId,\n      priority: priorityCode,\n      status: statusCode,\n      ...dynamicLabels,\n      // Incluir labels dinámicamente\n      stepDetails: testCaseObj['step summary'] || '',\n      testData: testCaseObj['test data'] || '',\n      expectedResult: testCaseObj['expected result'] || '',\n      id: 1,\n      isChecked: false,\n      isExpanded: true\n    });\n  }\n  return testCases;\n};","map":{"version":3,"names":["parseTestCases","rawData","folderId","projectId","PROJECT_CONFIG","status","priority","labels","config","lines","split","filter","line","trim","length","headerLine","originalHeaders","map","header","lowerCaseHeaders","toLowerCase","testCases","i","_testCaseObj$priority","_config$priority","_testCaseObj$status","_config$status","_testCaseObj$labels","values","testCaseObj","forEach","lowerHeader","index","value","replace","priorityKey","priorityCode","statusKey","statusCode","caseLabels","label","_config$labels","trimmedLabel","includes","push","dynamicLabels","labelCode","summary","sumary","caso","precondition","stepDetails","testData","expectedResult","id","isChecked","isExpanded"],"sources":["/Users/kushki/Downloads/JsonGenerator/src/components/TestCaseForm.js"],"sourcesContent":["// src/utils/parseTestCases.js\n\nexport const parseTestCases = (rawData, folderId, projectId) => {\n  const PROJECT_CONFIG = {\n    '10924': { // DMOE\n      status: {\n        'done': '520037',\n        'in progress': '520036',\n        'to do': '520035'\n      },\n      priority: {\n        'blocker': '589140',\n        'high': '589141',\n        'medium': '589142',\n        'low': '589143'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10809': { // CAR\n      status: {\n        'done': '302403',\n        'in progress': '302402',\n        'to do': '302401'\n      },\n      priority: {\n        'blocker': '179215',\n        'high': '179216',\n        'medium': '179217',\n        'low': '179218'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10786': { // BP\n      status: {\n        'done': '321723',\n        'in progress': '321722',\n        'to do': '321721'\n      },\n      priority: {\n        'blocker': '188008',\n        'high': '188009',\n        'medium': '188010',\n        'low': '188011'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10803': { // TYA\n      status: {\n        'done': '302421',\n        'in progress': '302420',\n        'to do': '302419'\n      },\n      priority: {\n        'blocker': '179223',\n        'high': '179224',\n        'medium': '179225',\n        'low': '179226'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    },\n    '10807': { // OPS\n      status: {\n        'done': '302412',\n        'in progress': '302411',\n        'to do': '302410'\n      },\n      priority: {\n        'blocker': '179219',\n        'high': '179220',\n        'medium': '179221',\n        'low': '179222'\n      },\n      labels: {\n        'ia': '254567',\n        'ia_amazonq': '219436',\n        'ia_chatgpt': '217193',\n        'ia_gemini': '254566',\n        'prod': '254565',\n        'qa': '217192',\n        'uat': '217194'\n      }\n    }\n  };\n\n  const config = PROJECT_CONFIG[projectId] || PROJECT_CONFIG['10924'];\n\n  const lines = rawData.split('\\n').filter(line => line.trim() !== '');\n  if (lines.length < 2) return [];\n\n  // Procesar encabezados insensibles a mayúsculas y crear un mapeo\n  const headerLine = lines[0];\n  const originalHeaders = headerLine.split('\\t').map(header => header.trim());\n  const lowerCaseHeaders = originalHeaders.map(header => header.toLowerCase());\n\n  const testCases = [];\n\n  for (let i = 1; i < lines.length; i++) {\n    const values = lines[i].split('\\t');\n    const testCaseObj = {};\n\n    lowerCaseHeaders.forEach((lowerHeader, index) => {\n      let value = values[index] ? values[index].trim() : '';\n      \n      // *** MODIFICACIÓN CLAVE AQUÍ: ELIMINAR COMILLAS DOBLES ***\n      // Elimina todas las comillas dobles del string.\n      // Si quieres solo quitar las que están al principio y al final, usarías:\n      // value = value.replace(/^\"|\"$/g, '');\n      // Pero si quieres que no aparezcan NUNCA dentro del texto, usa:\n      value = value.replace(/\"/g, ''); \n      \n      testCaseObj[lowerHeader] = value;\n    });\n\n    // Mapeo de valores (insensible a mayúsculas)\n    const priorityKey = testCaseObj.priority?.toLowerCase();\n    const priorityCode = config.priority?.[priorityKey] || null;\n\n    const statusKey = testCaseObj.status?.toLowerCase();\n    const statusCode = config.status?.[statusKey] || null;\n\n    const labels = [];\n    // Acceder a Labels usando el encabezado en minúscula\n    const caseLabels = testCaseObj.labels?.split(',') || [];\n\n    caseLabels.forEach(label => {\n        const trimmedLabel = label.trim().toLowerCase();\n        if (config.labels?.[trimmedLabel] && !labels.includes(config.labels[trimmedLabel])) {\n            labels.push(config.labels[trimmedLabel]);\n        }\n    });\n\n    // Construir objeto de labels dinámicamente\n    const dynamicLabels = {};\n    labels.forEach((labelCode, index) => {\n        dynamicLabels[`labels${index + 1}`] = labelCode;\n    });\n\n    testCases.push({\n        // Acceder a los datos usando los encabezados en minúscula\n        summary: testCaseObj.sumary || testCaseObj.caso || '',\n        precondition: testCaseObj.precondition || '',\n        projectId: projectId,\n        folderId: folderId,\n        priority: priorityCode,\n        status: statusCode,\n        ...dynamicLabels, // Incluir labels dinámicamente\n        stepDetails: testCaseObj['step summary'] || '',\n        testData: testCaseObj['test data'] || '',\n        expectedResult: testCaseObj['expected result'] || '',\n        id:1,\n        isChecked: false,\n        isExpanded: true\n    });\n  }\n\n  return testCases;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}