{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JsonResult=_ref=>{let{jsonData}=_ref;const[copied,setCopied]=useState(false);// Función para generar el string JSON sin las barras invertidas en las comillas internas\nconst getUnescapedJsonString=()=>{// Generar el JSON string normal\nlet jsonString=JSON.stringify(jsonData,null,2);// Reemplazar \\\" con \" solo dentro de los valores de cadena\n// Esto es un regex más complejo para evitar romper la estructura del JSON\n// Solo des-escapa las comillas que YA HAN SIDO ESCAPADAS por JSON.stringify\n// y que están dentro de los valores de cadenas.\n// Esto es una HACK, no es la forma correcta de manejar JSON, pero es para tu caso específico.\njsonString=jsonString.replace(/\\\\\"/g,'\"');// Si quieres un enfoque MUY AGRESIVO (no recomendado para JSON generales,\n// solo si tu Postman realmente necesita esto y nada más):\n// jsonString = jsonString.replace(/\\\\/g, ''); // Quita TODAS las barras invertidas. PELIGROSO.\n// Esto también quitaría \\n, \\t etc.\nreturn jsonString;};const handleCopy=()=>{// Usar la función que des-escapa para copiar\nnavigator.clipboard.writeText(getUnescapedJsonString());setCopied(true);setTimeout(()=>setCopied(false),2000);};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 bg-white rounded-lg shadow-md space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium\",children:\"Resultado JSON\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCopy,className:\"bg-black text-white py-1 px-3 rounded-md text-sm hover:bg-gray-800 transition-colors\",children:\"Copiar JSON\"}),copied&&/*#__PURE__*/_jsx(\"span\",{className:\"absolute -top-8 right-0 bg-gray-800 text-white text-xs px-2 py-1 rounded\",children:\"\\xA1Copiado!\"})]})]}),/*#__PURE__*/_jsx(\"pre\",{className:\"bg-gray-100 p-4 rounded-md overflow-x-auto text-sm\",children:getUnescapedJsonString()})]});};export default JsonResult;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","JsonResult","_ref","jsonData","copied","setCopied","getUnescapedJsonString","jsonString","JSON","stringify","replace","handleCopy","navigator","clipboard","writeText","setTimeout","className","children","onClick"],"sources":["/Users/kushki/Downloads/JsonGenerator/src/components/JsonResult.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst JsonResult = ({ jsonData }) => {\n  const [copied, setCopied] = useState(false);\n\n  // Función para generar el string JSON sin las barras invertidas en las comillas internas\n  const getUnescapedJsonString = () => {\n    // Generar el JSON string normal\n    let jsonString = JSON.stringify(jsonData, null, 2);\n\n    // Reemplazar \\\" con \" solo dentro de los valores de cadena\n    // Esto es un regex más complejo para evitar romper la estructura del JSON\n    // Solo des-escapa las comillas que YA HAN SIDO ESCAPADAS por JSON.stringify\n    // y que están dentro de los valores de cadenas.\n    // Esto es una HACK, no es la forma correcta de manejar JSON, pero es para tu caso específico.\n    jsonString = jsonString.replace(/\\\\\"/g, '\"'); \n    \n    // Si quieres un enfoque MUY AGRESIVO (no recomendado para JSON generales,\n    // solo si tu Postman realmente necesita esto y nada más):\n    // jsonString = jsonString.replace(/\\\\/g, ''); // Quita TODAS las barras invertidas. PELIGROSO.\n                                                 // Esto también quitaría \\n, \\t etc.\n\n    return jsonString;\n  };\n\n\n  const handleCopy = () => {\n    // Usar la función que des-escapa para copiar\n    navigator.clipboard.writeText(getUnescapedJsonString());\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <div className=\"p-6 bg-white rounded-lg shadow-md space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-lg font-medium\">Resultado JSON</h2>\n        <div className=\"relative\">\n          <button\n            onClick={handleCopy}\n            className=\"bg-black text-white py-1 px-3 rounded-md text-sm hover:bg-gray-800 transition-colors\"\n          >\n            Copiar JSON\n          </button>\n          {copied && (\n            <span className=\"absolute -top-8 right-0 bg-gray-800 text-white text-xs px-2 py-1 rounded\">\n              ¡Copiado!\n            </span>\n          )}\n        </div>\n      </div>\n      <pre className=\"bg-gray-100 p-4 rounded-md overflow-x-auto text-sm\">\n        {/* Usar la función que des-escapa para mostrar */}\n        {getUnescapedJsonString()} \n      </pre>\n    </div>\n  );\n};\n\nexport default JsonResult;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAE3C;AACA,KAAM,CAAAU,sBAAsB,CAAGA,CAAA,GAAM,CACnC;AACA,GAAI,CAAAC,UAAU,CAAGC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CAElD;AACA;AACA;AACA;AACA;AACAI,UAAU,CAAGA,UAAU,CAACG,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAE5C;AACA;AACA;AAC6C;AAE7C,MAAO,CAAAH,UAAU,CACnB,CAAC,CAGD,KAAM,CAAAI,UAAU,CAAGA,CAAA,GAAM,CACvB;AACAC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACR,sBAAsB,CAAC,CAAC,CAAC,CACvDD,SAAS,CAAC,IAAI,CAAC,CACfU,UAAU,CAAC,IAAMV,SAAS,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,CAC1C,CAAC,CAED,mBACEL,KAAA,QAAKgB,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DjB,KAAA,QAAKgB,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAChDnB,IAAA,OAAIkB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cACvDjB,KAAA,QAAKgB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBnB,IAAA,WACEoB,OAAO,CAAEP,UAAW,CACpBK,SAAS,CAAC,sFAAsF,CAAAC,QAAA,CACjG,aAED,CAAQ,CAAC,CACRb,MAAM,eACLN,IAAA,SAAMkB,SAAS,CAAC,0EAA0E,CAAAC,QAAA,CAAC,cAE3F,CAAM,CACP,EACE,CAAC,EACH,CAAC,cACNnB,IAAA,QAAKkB,SAAS,CAAC,oDAAoD,CAAAC,QAAA,CAEhEX,sBAAsB,CAAC,CAAC,CACtB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}